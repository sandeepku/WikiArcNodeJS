{
  "name": "WikiArc",
  "version": "0.0.1",
  "dependencies": {
    "express": "*",
    "xml2js": "*",
    "async": "*",
    "terraformer": "https://github.com/nixta/Terraformer/archive/nixta-dist-node.tar.gz",
    "request": "~2.27.0"
  },
  "engines": {
    "node": "*"
  },
  "readme": "WikiArc\r\n========================\r\n\r\nThis is a [node.js](http://nodejs.org) implementation of the [ArcGIS REST API](http://resources.arcgis.com/en/help/arcgis-rest-api/).\r\n\r\nIt allows simple read-only access by ArcGIS tools, apps, and APIs, including [ArcGIS Runtime SDKs](https://developers.arcgis.com/en/documentation/) (iOS, Android, Mac OS X, Windows Phone, etc.), [ArcGIS API for JavaScript](https://developers.arcgis.com/en/javascript/), [esri-leaflet](http://esri.github.io/esri-leaflet/), [ArcGIS Desktop](http://www.esri.com/software/arcgis/arcgis-for-desktop) etc.\r\n\r\nIt also provides HTML to let users browse available services and view them in maps.\r\n\r\nView a [live demo](http://www.arcgis.com/home/item.html?id=44b38d1abb514587a552ffd37e18a9af).\r\n\r\n![Sample Image](docs/RestServiceDirectory.png)\r\n\r\n##Introduction\r\nThe application handles ArcGIS REST API requests to custom \"data providers\", and returns their output in ArcGIS JSON format.\r\n\r\nHere are two sample \"data providers\":\r\n\r\n* **WikiMapia**: Provide data from http://wikimapia.org.\r\nThe framework lets you build your own \"data providers\":\r\n\r\n1. Subclass `dataproviderbase.DataProviderBase`. Override only what you need to.\r\n2. Add instances of your subclass to the `dataProviders` array in `index.js`.\r\n\r\nAt a glance, this is how it works:\r\n\r\n![Structure](docs/structure.png)\r\n\r\n* **urls**: Construct Adaptor and Template REST Endpoints.\r\n* **output**: Construct JSON output. Format HTML output for JSON.\r\n* **dataproviderbase**: Describe the service (fields, idField, nameField, etc.) and return features when requested. Inherit from this and selectively override to add a data provider. It also provides an in-memory `GeoStore` caching framework which data providers may opt in to.\r\n\r\nBy using the Esri [Terraformer](https://github.com/esri/terraformer) library's `GeoStore` component, the application is able to support spatial caching and indexing for data providers. Terraformer also provides outputting in [geoJSON](http://www.geojson.org/geojson-spec.html) by specifying `f=geojson`.\r\n\r\n**Note:** This project is very much a proof of concept on how to implement the ArcGIS REST API. Another good example can be found in [Koop](https://github.com/esri/koop).\r\n\r\n## Requirements\r\n* [node.js](http://nodejs.org)\r\n\r\n##Installation\r\n1. Clone the repo and run `npm update` in the repo folder\r\n2. Run the node server with `node index`\r\n3. Browse to [http://localhost:1337](http://localhost:1337)\r\n\r\n##Sample Data Providers\r\n###Citybikes\r\nThe Citybikes sample data provider makes use of the [awesome API](http://api.citybik.es) at [CityBik.es](http://citybik.es) providing bike share data (almost) globally. This sample Data Provider adapts the data into Geoservices format output. The root REST endpoint \r\nfor the CityBikes data provider can be found live here (this is where you might point ArcCatalog): http://geonode.geeknixta.com/citybikes/rest/services\r\n###GeoHub\r\nMaking use of the [GeoHub repo](https://github.com/chelm/geohub), this sample provider allows a client to request geoJSON files from either a GitHub repository ([example](https://github.com/chelm/grunt-geo/blob/master/forks.geojson)) or from a GitHub gist ([example](https://gist.github.com/chelm/6178185)). This sample uses the `dataproviderbase` GeoStore cache framework. For more details, see the [GeoHub Plugin Readme](samples/geohub/README.md).\r\n\r\n##Known Limitations\r\n* Only a limited subset of the [Geoservices REST Specification](http://resources.arcgis.com/en/help/arcgis-rest-api/) is implemented.\r\n\t* [`Server Info`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Server_Info/02r300000116000000/)\r\n\t* [`Catalog`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Catalog/02r3000000tn000000/)\r\n\t* [`Feature Service`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Feature_Service/02r3000000z2000000/)\r\n\t* `Layers (Feature Service)`\r\n\t* [`Layer (Feature Service)`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Layer/02r3000000w6000000/)\r\n\t* [`Query (Feature Service\\Layer)`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Query_Feature_Service_Layer/02r3000000r1000000/)\r\n* Only spatial references 4326 and 102100 are supported.\r\n* The application will convert from 4326 to 102100 only.\r\n* Queries only work against the layer end point. `Query (Feature Service)` is declared as a capability but not yet implemented.\r\n* HTML Browsing is not available for Query endpoints. All queries return JSON.\r\n* Only a subset of [`Query (Feature Service\\Layer)`](http://resources.arcgis.com/en/help/arcgis-rest-api/#/Query_Feature_Service_Layer/02r3000000r1000000/) is implemented:\r\n\t* `objectIds`\r\n\t* `outSR` (4326 and 102100 only)\r\n\t* `returnIdsOnly`\r\n\t* `returnCountOnly`\r\n* Authentication and tokenization is not implemented. All services are considered public.\r\n\r\n## Resources\r\n\r\n* [ArcGIS REST Specification](http://resources.arcgis.com/en/help/arcgis-rest-api/)\r\n* [Terraformer](https://github.com/esri/terraformer) by [Esri](http://esri.github.io)\r\n* [node.js documentation](http://nodejs.org/api/)\r\n* [express.js documentation](http://expressjs.com/api.html)\r\n* [CityBikes API](http://api.citybik.es)\r\n* [GeoHub](https://github.com/chelm/geohub)\r\n* [geoJSON Specification](http://www.geojson.org/geojson-spec.html)\r\n\r\n## Issues\r\n\r\nFind a bug or want to request a new feature?  Please let us know by submitting an Issue.\r\n\r\n## Contributing\r\n\r\nAnyone and everyone is welcome to contribute. \r\n\r\n## Licensing\r\nCopyright 2013 Esri\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nA copy of the license is available in the repository's [license.txt](https://github.com/ArcGIS/node-geoservices-adaptor/blob/master/license.txt) file.\r\n[](Esri Tags: NodeJS ExpressJS GeoServices REST CityBikes)\r\n[](Esri Language: JavaScript)\r\n",
  "readmeFilename": "README.md",
  "description": "WikiArc\r ========================",
  "_id": "WikiArc@0.0.1",
  "dist": {
    "shasum": "c99b2533fece2c13ab48189f8803d6362a6feec0"
  },
  "_from": "."
}
